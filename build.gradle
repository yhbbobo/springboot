buildscript {
    repositories { 
		mavenLocal()
        jcenter()
		maven { url "http://repo.spring.io/snapshot" }
		maven { url "http://repo.spring.io/milestone" }
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:1.3.0.BUILD-SNAPSHOT"
		classpath 'org.springframework:springloaded:1.2.3.RELEASE'
    }
}
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'spring-boot'

//Compile options required for source code and IDE compatibility
[ compileJava, compileTestJava ]*.options*.encoding = 'UTF-8'
compileJava {
	options.compilerArgs << '-XDignore.symbol.file'
	options.fork = true
	options.forkOptions.executable = 'javac'
}

springBoot {
	mainClass = 'com.ecoman.springboot.MicroServiceApp'
}
repositories { 
    jcenter()
    maven { url "http://repo.spring.io/snapshot" }
    maven { url "http://repo.spring.io/milestone" }
}

sourceSets {
	main {
		java {
			srcDir 'src/main/java'
		}
		resources {
			srcDir 'src/main/resources'
		}
	}
	test {
		java {
			srcDir 'src/test/java'
		}
		resources {
			srcDir 'src/main/resources'
		}
	}
}
dependencies {
    compile 'org.springframework.boot:spring-boot-starter-web'

//JPA  dependencies
	compile 'org.springframework.boot:spring-boot-starter-data-jpa'
	
	runtime 'mysql:mysql-connector-java:5.1.36'
	
    testCompile 'org.springframework.boot:spring-boot-starter-test'
	
	compile 'org.springframework.boot:spring-boot-starter-data-rest'
	
	// compile 'org.springframework.boot:spring-boot-starter-remote-shell'
	
	compile 'org.codehaus.groovy:groovy-all:2.4.3'
	compile 'org.codehaus.groovy.modules.http-builder:http-builder:0.7.1'
	compile 'us.monoid.web:resty:0.3.2'
}

test {
	include ''//'**/TestSuite.class'
}
